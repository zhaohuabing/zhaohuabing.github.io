<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Huabing Blog</title>
    <link>https://zhaohuabing.com/post/</link>
    <description>Recent content in Posts on Huabing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zhaohuabing.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git内部存储原理</title>
      <link>https://zhaohuabing.com/post/2019-01-21-git/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2019-01-21-git/</guid>
      <description>Git是程序员工作中使用频率非常高的工具，要提高日常的工作效率，就需要熟练掌握Git的使用方法。相对于传统的版本控制系统而言，Git更为强大</description>
    </item>
    
    <item>
      <title>The obstacles to put Istio into production and how we solve them</title>
      <link>https://zhaohuabing.com/post/2018-12-27-the-obstacles-to-put-istio-into-production/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-12-27-the-obstacles-to-put-istio-into-production/</guid>
      <description>What is service mesh?  Service mesh is becoming yet another fancy name in the cloud-native world this year. What exactly it is? By definition, service mesh is a dedicated infrastructure layer for handling service-to-service communication. It’s responsible for the reliable delivery of requests through the complex topology of services that comprise a modern, cloud-native application. Besides, it also facilitates the governance of services.  What is Istio?  Istio is an open-source service mesh project lead by Google, IBM and Lyft.</description>
    </item>
    
    <item>
      <title>Machine Learning Introduction</title>
      <link>https://zhaohuabing.com/post/2018-12-24-machine-learningp-introduction/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-12-24-machine-learningp-introduction/</guid>
      <description>What is machine learning? Two definitions of machine learning are offered.
Arthur Samuel version:  A field of study that gives computers the ability to learn without being explicitly programmed.
Tom Mitchell version:  A computer program is said to learn from experience E with respect to some task T and some performance measure P, if its performance on T, as measured by P, improves with experience E.
Example: playing checkers.</description>
    </item>
    
    <item>
      <title>拥抱NFV，Istio 1.1 将支持多网络平面</title>
      <link>https://zhaohuabing.com/post/2018-12-19-multi-network-interfaces-for-istio/</link>
      <pubDate>Wed, 19 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-12-19-multi-network-interfaces-for-istio/</guid>
      <description>Istio 1.0版本只支持在单个网络，即Mesh中的服务只能连接在一个网络上。虽然在架构设计上是开放的，但从目前的代码来看，Istio的内部实现还是</description>
    </item>
    
    <item>
      <title>Istio实战系列-Envoy Proxy构建分析</title>
      <link>https://zhaohuabing.com/post/2018-10-29-envoy-build/</link>
      <pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-10-29-envoy-build/</guid>
      <description>Istio由控制面和数据面组成。其中Envoy是Istio在数据面缺省使用的转发代理，Istio利用Envoy的四层和七层代理功能对网格中微</description>
    </item>
    
    <item>
      <title>Istio微服务平台集成实践</title>
      <link>https://zhaohuabing.com/post/2018-10-18-istio-paas-integration/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-10-18-istio-paas-integration/</guid>
      <description>前言 Istio发布1.0版本后，其服务发现和路由规则功能已基本具备production能力，我们也开始了Istio和公司内部微服务平台的集成</description>
    </item>
    
    <item>
      <title>Istio流量管理实现机制深度解析</title>
      <link>https://zhaohuabing.com/post/2018-09-25-istio-traffic-management-impl-intro/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-09-25-istio-traffic-management-impl-intro/</guid>
      <description>前言 Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的</description>
    </item>
    
    <item>
      <title>English Practice Topic: Smart Phone Addiction</title>
      <link>https://zhaohuabing.com/post/2018-08-28-english-topic-smart-phone/</link>
      <pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-08-28-english-topic-smart-phone/</guid>
      <description>Smart phones are significantly changing the way we live and work. I heavily depend on my Android phone in my daily life, I use it to schedule my meetings, receive emails, remind me important dates, learning English, etc.
What‘s your opinions about smart phone? Are you addicted to your smart phone? Do you think it&amp;rsquo;s a great invention, or a devil tool of commercial? Let&amp;rsquo;s talk about it.
Questions  What type of phone are you using?</description>
    </item>
    
    <item>
      <title>Secure ONAP Microservices with Istio Mutual TLS Authentication and RBAC</title>
      <link>https://zhaohuabing.com/post/2018-08-15-manage-onap-with-istio-auth-enabled/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-08-15-manage-onap-with-istio-auth-enabled/</guid>
      <description>In the previous post Manage ONAP Microservices with Istio Service Mesh, we went through the steps of how to install Istio and integrate it with ONAP platform, it’s super simple and has nearly no impact to the existing projects. Now let’s enable Istio auth to secure the inter-service communication inside ONAP, it will need a little bit more efforts, but it’s worth with the benefits brought by it. Installation Download installation scripts from ONAP Gerrit:</description>
    </item>
    
    <item>
      <title>Manage ONAP Microservices with Istio Service Mesh</title>
      <link>https://zhaohuabing.com/post/2018-08-01-manage-onap-with-istio/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-08-01-manage-onap-with-istio/</guid>
      <description>In the previous post How service mesh can help during the ONAP Microservice journey, we have discussed why the community wants ONAP to evolve towards Microservice architecture and how service mesh approach could help during the journey. Now it’s time to dip our toe in the water, let’s try out Istio with ONAP by following the below steps. Installation First, download installation scripts from ONAP Gerrit:
git clone https://gerrit.onap.org/r/msb/service-mesh  Kubernetes Master We need Kubernetes 1.</description>
    </item>
    
    <item>
      <title>How service mesh can help during the ONAP Microservice journey</title>
      <link>https://zhaohuabing.com/post/2018-06-22-onap-with-service-mesh/</link>
      <pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-06-22-onap-with-service-mesh/</guid>
      <description>ONAP Beijing is available now!
ONAP, as part of LF Networking, now accounts for more than 65% of global subscriber participation through carriers creating a harmonized, de-facto open source platform. While it&amp;rsquo;s so exciting to see that more operators are deploying ONAP in their commercial network, ONAP community realizes that there are still somewhere we can improve to smooth the deployment process. For example, instead of deploying ONAP as a whole, users may just want to pick some modules, integrate these modules with their existing system to get a customized ONAP solution.</description>
    </item>
    
    <item>
      <title>Istio v1aplha3 routing API介绍(译文）</title>
      <link>https://zhaohuabing.com/2018/06/04/introducing-the-istio-v1alpha3-routing-api/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/06/04/introducing-the-istio-v1alpha3-routing-api/</guid>
      <description>&lt;p&gt;到目前为止，Istio提供了一个简单的API来进行流量管理，该API包括了四种资源：RouteRule，DestinationPolicy，EgressRule和Ingress（直接使用了Kubernets的Ingress资源）。借助此API，用户可以轻松管理Istio服务网格中的流量。该API允许用户将请求路由到特定版本的服务，为弹性测试注入延迟和失败，添加超时和断路器等等，所有这些功能都不必更改应用程序本身的代码。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bitcoin Script</title>
      <link>https://zhaohuabing.com/2018/06/03/cryptocurrency_week3_bitcoin_script/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/06/03/cryptocurrency_week3_bitcoin_script/</guid>
      <description>This series of articles are my notes of &amp;ldquo;Bitcoin and Cryptocurrency Technologies&amp;rdquo; online course.
 Bitcoin Script is using to transfer coins instead of just signature and public key address, which allows more flexibilities for Bitcoin transactions.
A Standard Transaction Let&amp;rsquo;s say Alice wants to spend some coins she received from a previous transaction, this is how the procedure looks like. * Alice receives some coins from a previous transaction.</description>
    </item>
    
    <item>
      <title>Istio 0.8 Release发布</title>
      <link>https://zhaohuabing.com/2018/06/02/istio08/</link>
      <pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/06/02/istio08/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Distributed Consensus</title>
      <link>https://zhaohuabing.com/2018/05/26/cryptocurrency_week2_distributed_consenus/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/26/cryptocurrency_week2_distributed_consenus/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This series of articles are my notes of &amp;ldquo;Bitcoin and Cryptocurrency Technologies&amp;rdquo; online course.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Incentives and Proof of Work</title>
      <link>https://zhaohuabing.com/2018/05/26/cryptocurrency_week2_incentives_and_proof_of_work/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/26/cryptocurrency_week2_incentives_and_proof_of_work/</guid>
      <description>This series of articles are my notes of &amp;ldquo;Bitcoin and Cryptocurrency Technologies&amp;rdquo; online course.
 Incentive The mechanism to motivate nodes join the Bitcoin network and create blocks.
Incentive 1: Block Reward Creator of block gets to * include special coin-creation transaction in the block * choose reciptient address of this transaction (Of course, it is the miner&amp;rsquo;s address)
Explanation: Because the coin-creation transaction is just like other transaction in that block, it will only be valid if the created block ends up in the consensus chain, it&amp;rsquo;s the incentive which encourages the nodes to be honest, otherwise they can&amp;rsquo;t get their rewards.</description>
    </item>
    
    <item>
      <title>Everything about Setting Up My Ubuntu Desktop</title>
      <link>https://zhaohuabing.com/2018/05/24/set_up_my_ubuntu_desktop/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/24/set_up_my_ubuntu_desktop/</guid>
      <description>Generate SSH Key Pair ssh-keygen -C &amp;quot;zhaohuabing@gmail.com&amp;quot;  Shadowsocks Install shadowsokcs
sudo apt-get install python3-pip sudo pip3 install shadowsocks  Create config at config/shadowsocks.json, with the following content:
{ &amp;quot;server&amp;quot;:&amp;quot;remote-shadowsocks-server-ip-addr&amp;quot;, &amp;quot;server_port&amp;quot;:443, &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;, &amp;quot;local_port&amp;quot;:1080, &amp;quot;password&amp;quot;:&amp;quot;your-passwd&amp;quot;, &amp;quot;timeout&amp;quot;:300, &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;, &amp;quot;fast_open&amp;quot;:false, &amp;quot;workers&amp;quot;:1 }  Start a local socks proxy
sudo sslocal -c config/shadowsocks.json -d start  In case there is an openssl error, modify shadowsocks source file.
sudo vi /usr/local/lib/python3.6/dist-packages/shadowsocks/crypto/openssl.py :%s/cleanup/reset/gc  Convert shadowsocks socks proxy to http proxy</description>
    </item>
    
    <item>
      <title>微服务安全沉思录之三</title>
      <link>https://zhaohuabing.com/2018/05/23/external_system_auth/</link>
      <pubDate>Wed, 23 May 2018 18:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/23/external_system_auth/</guid>
      <description>外部系统访问控制 除用户访问和微服务之间的相互访问外，外部的第三方系统也可能需要访问系统内部的微服务。例如在上一篇博客的网上商店例子中，外部的</description>
    </item>
    
    <item>
      <title>微服务安全沉思录之二</title>
      <link>https://zhaohuabing.com/2018/05/23/service_2_service_auth/</link>
      <pubDate>Wed, 23 May 2018 15:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/23/service_2_service_auth/</guid>
      <description>&lt;h2 id=&#34;服务间认证与鉴权&#34;&gt;服务间认证与鉴权&lt;/h2&gt;

&lt;p&gt;除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问，包括下述场景：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;用户间接触发的微服务之间的相互访问&lt;BR&gt;
例如在一个网上商店应用中，用户访问购物车微服务进行结算时，购物车微服务可能需要访问用户评级微服务获取用户的会员级别，以得到用户可以享受购物折扣。&lt;/li&gt;
&lt;li&gt;非用户触发的微服务之间的相互访问&lt;BR&gt;
例如数据同步或者后台定时任务导致的微服务之间的相互访问。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;根据应用系统的数据敏感程度的不同，对于系统内微服务的相互访问可能有不同的安全要求。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微服务安全沉思录之一</title>
      <link>https://zhaohuabing.com/2018/05/22/user_authentication_authorization/</link>
      <pubDate>Wed, 23 May 2018 10:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/22/user_authentication_authorization/</guid>
      <description>这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清了在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在</description>
    </item>
    
    <item>
      <title>Istio Sidecar自动注入原理</title>
      <link>https://zhaohuabing.com/2018/05/23/istio-auto-injection-with-webhook/</link>
      <pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/23/istio-auto-injection-with-webhook/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。&lt;/p&gt;

&lt;p&gt;使用webhook的优势是不需要对API Server的源码进行修改和重新编译就可以扩展其功能。插入的逻辑实现为一个独立的web进程，通过参数方式传入到kubernets中，由kubernets在进行自身逻辑处理时对扩展逻辑进行回调。&lt;/p&gt;

&lt;p&gt;Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Programming Assignment: Scrooge Coin</title>
      <link>https://zhaohuabing.com/2018/05/20/cryptocurrency_week1_scroogecoin/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/20/cryptocurrency_week1_scroogecoin/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This series of articles are my notes of &amp;ldquo;Bitcoin and Cryptocurrency Technologies&amp;rdquo; online course.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Digital Signature and Public Key as Identities</title>
      <link>https://zhaohuabing.com/2018/05/12/cryptocurrency_week1_digital_signature/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/12/cryptocurrency_week1_digital_signature/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This series of articles are my notes of &amp;ldquo;Bitcoin and Cryptocurrency Technologies&amp;rdquo; online course.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hash Pointers and Data Structures</title>
      <link>https://zhaohuabing.com/post/2018-05-12-cryptocurrency_week1_hash_pointer_and_data_structures/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2018-05-12-cryptocurrency_week1_hash_pointer_and_data_structures/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This series of articles are my notes of &amp;ldquo;Bitcoin and Cryptocurrency Technologies&amp;rdquo; online course.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;hash-pointer&#34;&gt;Hash Pointer&lt;/h2&gt;

&lt;p&gt;Hash Pointer is comprised of two parts:
* Pointer to where some information is stored
* Cryptographic hash of that information&lt;br /&gt;
The pointer can be used to get the information, the hash can be used to verify that information hasn&amp;rsquo;t been changed&lt;br /&gt;
&lt;img src=&#34;http://img.zhaohuabing.com/in-post/2018-05-12-cryptocurrency_week1_hash_pointer_and_data_structures/hashpointet.png&#34; alt=&#34;hashpointer&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cryptographic Hash Function</title>
      <link>https://zhaohuabing.com/2018/05/07/cryptocurrency_week1_cryptographic_hash_function/</link>
      <pubDate>Wed, 09 May 2018 22:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/07/cryptocurrency_week1_cryptographic_hash_function/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This series of articles are my notes of &amp;ldquo;Bitcoin and Cryptocurrency Technologies&amp;rdquo; online course.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;hash-function&#34;&gt;Hash Function&lt;/h2&gt;

&lt;p&gt;Hash function is a mathematical function:&lt;em&gt;H(X)=Y&lt;/em&gt;
* H:  A hash function which takes an input value and calculates an output value
* X: Input of the hash function, it could be any data of any length
* Y: Output of the hash function: a fix-size bit(, it can be 256, 384, 516 &amp;hellip;, Bitcoin uses 256)
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Introduction to crypto and cryptocurrencies</title>
      <link>https://zhaohuabing.com/2018/05/06/cryptocurrency_week1/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/06/cryptocurrency_week1/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This series of articles are my notes of &amp;ldquo;Bitcoin and Cryptocurrency Technologies&amp;rdquo; online course.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-did-i-get-into-this&#34;&gt;How did I get into this?&lt;/h2&gt;

&lt;p&gt;I have noticed the buzzwords “Bitcoin” and “Blockchain” for a while. There are lots of articles, news, and talks around them. It seems that many people believe that cryptocurrency is the future of online payment, some even claim that blockchain would become the fundamental technology of the next generation of the Internet.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>川西秘境探险</title>
      <link>https://zhaohuabing.com/2018/05/01/may-day-jiulonghu/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/05/01/may-day-jiulonghu/</guid>
      <description>&lt;h2 id=&#34;寻浮云牧场不遇&#34;&gt;寻浮云牧场不遇&lt;/h2&gt;

&lt;p&gt;五一节前的一周内，几个朋友就纷纷坐不住了，一个二个不再安心上班，开始在微信群里讨论过节要到哪里耍。
大家思来想去，最后决定还是去理县方向。因为根据多年自驾的经验，只要出了汶川，沿途都是风景。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Helm介绍</title>
      <link>https://zhaohuabing.com/2018/04/16/using-helm-to-deploy-to-kubernetes/</link>
      <pubDate>Mon, 16 Apr 2018 15:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/04/16/using-helm-to-deploy-to-kubernetes/</guid>
      <description>前言 Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Hel</description>
    </item>
    
    <item>
      <title>Service Mesh 和 API Gateway的关系探讨（译文）</title>
      <link>https://zhaohuabing.com/2018/04/11/service-mesh-vs-api-gateway/</link>
      <pubDate>Wed, 11 Apr 2018 09:32:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/04/11/service-mesh-vs-api-gateway/</guid>
      <description>Service Mesh vs API Gateway 在前一篇关于Service Mesh的文章中,我提到了几个关于Service Mesh和API Gateway之间关系的问题，在本篇文章</description>
    </item>
    
    <item>
      <title>谈谈微服务架构中的基础设施：Service Mesh与Istio</title>
      <link>https://zhaohuabing.com/2018/03/29/what-is-service-mesh-and-istio/</link>
      <pubDate>Thu, 29 Mar 2018 12:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/03/29/what-is-service-mesh-and-istio/</guid>
      <description>&lt;h2 id=&#34;微服务架构的演进&#34;&gt;微服务架构的演进&lt;/h2&gt;

&lt;p&gt;作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。&lt;/p&gt;

&lt;p&gt;另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性。
 
&lt;img src=&#34;http://img.zhaohuabing.com/in-post/2018-03-29-what-is-service-mesh-and-istio/microservice.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何配置docker使用HTTP代理</title>
      <link>https://zhaohuabing.com/2018/03/13/use-docker-behind-http-proxy/</link>
      <pubDate>Tue, 13 Mar 2018 18:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/03/13/use-docker-behind-http-proxy/</guid>
      <description>&lt;h2 id=&#34;ubuntu&#34;&gt;Ubuntu&lt;/h2&gt;

&lt;h3 id=&#34;设置docker使用http-proxy&#34;&gt;设置docker使用http proxy&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo /etc/default/docker

export http_proxy=&amp;quot;http://127.0.0.1:3128/&amp;quot;
export https_proxy=&amp;quot;http://127.0.0.1:3128/&amp;quot;
export HTTP_PROXY=&amp;quot;http://127.0.0.1:3128/&amp;quot;
export HTTPS_PROXY=&amp;quot;http://127.0.0.1:3128/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vim Tips</title>
      <link>https://zhaohuabing.com/2018/02/09/vim-tips/</link>
      <pubDate>Fri, 09 Feb 2018 11:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/02/09/vim-tips/</guid>
      <description>&lt;h2 id=&#34;vim-graphical-cheat-sheet&#34;&gt;vim graphical cheat sheet&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://zhaohuabing.com/https://img.zhaohuabing.com/in-post/2018-02-09-vim-tips/vi-vim-cheat-sheet.svg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何使用非root用户执行docker命令</title>
      <link>https://zhaohuabing.com/2018/02/09/docker-without-sudo/</link>
      <pubDate>Fri, 09 Feb 2018 10:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/02/09/docker-without-sudo/</guid>
      <description> Add the docker group if it doesn&amp;rsquo;t already exist: sudo groupadd docker
Add the connected user &amp;ldquo;$USER&amp;rdquo; to the docker group. Change the user name to match your preferred user if you do not want to use your current user: sudo gpasswd -a $USER docker
Either do a newgrp docker or log out/in to activate the changes to groups. </description>
    </item>
    
    <item>
      <title>如何构建安全的微服务应用？</title>
      <link>https://zhaohuabing.com/2018/02/03/authentication-and-authorization-of-microservice/</link>
      <pubDate>Sat, 03 Feb 2018 12:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/02/03/authentication-and-authorization-of-microservice/</guid>
      <description>前言 微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统</description>
    </item>
    
    <item>
      <title>Nginx开源Service Mesh组件Nginmesh安装指南</title>
      <link>https://zhaohuabing.com/2018/01/02/nginmesh-install/</link>
      <pubDate>Tue, 02 Jan 2018 12:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/01/02/nginmesh-install/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。

&lt;img src=&#34;https://raw.githubusercontent.com/nginmesh/nginmesh/master/images/nginx_sidecar.png&#34; alt=&#34;Nginmesh sidecar proxy&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何从外部访问Kubernetes集群中的应用？</title>
      <link>https://zhaohuabing.com/2017/11/28/access-application-from-outside/</link>
      <pubDate>Tue, 28 Nov 2017 12:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2017/11/28/access-application-from-outside/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>使用脚本和定时任务自动设置windows HTTP 代理服务器</title>
      <link>https://zhaohuabing.com/2017/11/23/windows-proxy-scripts/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2017/11/23/windows-proxy-scripts/</guid>
      <description>&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>采用Istio实现灰度发布(金丝雀发布)</title>
      <link>https://zhaohuabing.com/2017/11/08/istio-canary-release/</link>
      <pubDate>Wed, 08 Nov 2017 15:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2017/11/08/istio-canary-release/</guid>
      <description>灰度发布（又名金丝雀发布）介绍 当应用上线以后，运维面临的一大挑战是如何能够在不影响已上线业务的情况下进行升级。做过产品的同学都清楚，不管在发</description>
    </item>
    
    <item>
      <title>使用Istio实现应用流量转移</title>
      <link>https://zhaohuabing.com/2017/11/07/istio-traffic-shifting/</link>
      <pubDate>Tue, 07 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2017/11/07/istio-traffic-shifting/</guid>
      <description>&lt;p&gt;关于Istio的更多内容请参考&lt;a href=&#34;http://istio.doczh.cn/&#34;&gt;istio中文文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;原文参见&lt;a href=&#34;https://istio.io/docs/tasks/traffic-management/traffic-shifting.html&#34;&gt;Traffic Shifting&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。

为简单起见，本任务将采用两步将流量从&lt;code&gt;reviews:v1&lt;/code&gt; 迁移到 &lt;code&gt;reviews:v3&lt;/code&gt;，权重分别为50%，100%。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Istio及Bookinfo示例程序安装试用笔记</title>
      <link>https://zhaohuabing.com/2017/11/04/istio-install_and_example/</link>
      <pubDate>Sat, 04 Nov 2017 12:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2017/11/04/istio-install_and_example/</guid>
      <description>&lt;h2 id=&#34;服务网格简介&#34;&gt;服务网格简介&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;服务网格&lt;/strong&gt;（Service Mesh）是为解决微服务的通信和治理而出现的一种&lt;strong&gt;架构模式&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;服务网格将服务间通讯以及与此相关的管理控制功能从业务程序中下移到一个基础设施层，从而彻底隔离了业务逻辑和服务通讯两个关注点。采用服务网格后，应用开发者只需要关注并实现应用业务逻辑。服务之间的通信，包括服务发现，通讯的可靠性，通讯的安全性，服务路由等由服务网格层进行处理，并对应用程序透明。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Welcome to Zhaohuabing Blog</title>
      <link>https://zhaohuabing.com/2017/11/03/hello-world/</link>
      <pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2017/11/03/hello-world/</guid>
      <description>  “Yeah It&amp;rsquo;s on. ”
 Hello World! </description>
    </item>
    
  </channel>
</rss>