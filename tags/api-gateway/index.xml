<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API Gateway on Huabing Blog</title>
    <link>https://zhaohuabing.com/tags/api-gateway/</link>
    <description>Recent content in API Gateway on Huabing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zhaohuabing.com/tags/api-gateway/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Which One is the Right Choice for the Ingress Gateway of Your Service Mesh?</title>
      <link>https://zhaohuabing.com/post/2019-04-16-how-to-choose-ingress-for-service-mesh-english/</link>
      <pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2019-04-16-how-to-choose-ingress-for-service-mesh-english/</guid>
      <description>By default, in a Kubernetes cluster with the Istio service mesh enabled, services can only be accessed inside the cluster. However, some of the services may need to be exposed to external networks as well. Kubernetes and Istio provide a variety of means to get external traffic into your cluster including NodePort, LoadBalancer, Kubernetes Ingress and Istio Gateway. With all these options, which one should be the right choice for</description>
    </item>
    
    <item>
      <title>如何为服务网格选择入口网关？</title>
      <link>https://zhaohuabing.com/post/2019-03-29-how-to-choose-ingress-for-service-mesh/</link>
      <pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2019-03-29-how-to-choose-ingress-for-service-mesh/</guid>
      <description>在启用了Istio服务网格的Kubernetes集群中，缺省情况下只能在集群内部访问网格中的服务，要如何才能从外部网络访问这些服务呢？ Kub</description>
    </item>
    
    <item>
      <title>Service Mesh 和 API Gateway的关系探讨（译文）</title>
      <link>https://zhaohuabing.com/2018/04/11/service-mesh-vs-api-gateway/</link>
      <pubDate>Wed, 11 Apr 2018 09:32:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/2018/04/11/service-mesh-vs-api-gateway/</guid>
      <description>Service Mesh vs API Gateway 在前一篇关于Service Mesh的文章中,我提到了几个关于Service Mesh和API Gateway之间关系的问题，在本篇文章</description>
    </item>
    
    <item>
      <title>ONAP Beijing Release Developer Forum: MSB to Support Carrier Grade ONAP Microservice Architecture with Service Mesh</title>
      <link>https://zhaohuabing.com/post/2017-11-11-onap-msb-to-support-carrier-grade-onap-microservice-architecture-with-service-mesh/</link>
      <pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2017-11-11-onap-msb-to-support-carrier-grade-onap-microservice-architecture-with-service-mesh/</guid>
      <description>Introduction In this session, I&amp;rsquo;ll talk about the MSB Plan for R2 and Beyond. I&amp;rsquo;ll also discuss the OMSA(ONAP Microservice Architecture): the vision of ONAP Microservice Architecture to support Carrier-Grade requirements of ONAP Microservices, which includes Service Orchestration, Service Discovery, Inter-service Communication, Service Governance and Service Monitoring and External API Gateway. ONAP Architecture Principle: ONAP modules should be designed as microservices: service-based with clear, concise function addressed by each service</description>
    </item>
    
    <item>
      <title>ONAP Developer Event: Microservice Bus Tutorial </title>
      <link>https://zhaohuabing.com/post/2017-09-25-onap-microservice-bus-tutorial-/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2017-09-25-onap-microservice-bus-tutorial-/</guid>
      <description>Introduction Microservices Bus(MSB) provide a reliable, resilient and scalable communication and governance infrastructure to support Microservice Architecture including including service registration/discovery, external API gateway, internal API gateway, client SDK. It&amp;rsquo;s a pluggable architecture so it can integrate with auth service provider to provide centralized Authentication &amp;amp; Authorization. MSB also provides a service portal to manage the REST APIs. MSB doesn’t depend on a specific</description>
    </item>
    
    <item>
      <title>ONS ONAP Minisummit: Microservice Powered Orchestration Architecture</title>
      <link>https://zhaohuabing.com/post/2017-04-14-onap-microservice-powered-orchestration-architecture/</link>
      <pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2017-04-14-onap-microservice-powered-orchestration-architecture/</guid>
      <description>Introduction In this session, I&amp;rsquo;ll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications. First, I will start with why we choose Microservice Architecture in OPEN-O. Then, I’d like to talk about the challenges we were facing when we turn to the microservice approach. Finally, How we address these challenges in OPEN-O with the help of Microservice BUS And</description>
    </item>
    
    <item>
      <title>ONAP Developer Event: MSB Technical Deep Dive and ONAP Use Cases</title>
      <link>https://zhaohuabing.com/post/2017-04-02-onap-msb-deep-dive/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2017-04-02-onap-msb-deep-dive/</guid>
      <description>Introduction In this session, I&amp;rsquo;ll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications. First, I will start with why we choose Microservice Architecture in OPEN-O. Then, I’d like to talk about the challenges we were facing when we turn to the microservice approach. Finally, How we address these challenges in OPEN-O with the help of Microservice BUS And</description>
    </item>
    
  </channel>
</rss>