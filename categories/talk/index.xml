<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Talk on Huabing Blog</title>
    <link>https://zhaohuabing.com/categories/talk/</link>
    <description>Recent content in Talk on Huabing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Jul 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zhaohuabing.com/categories/talk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Istio Meetup China：全栈服务网格 - Aeraki 助你在 Istio 服务网格中管理任何七层流量</title>
      <link>https://zhaohuabing.com/post/2021-07-10-full-stack-service-mesh/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2021-07-10-full-stack-service-mesh/</guid>
      <description>主题简介 流量管理是 Istio 服务网格的核心能力，然而 Istio 缺省只提供了 HTTP 和 gRPC 两种协议的七层管理能力。对于微服务中常用的其他协议，包括 RPC、Messag</description>
    </item>
    
    <item>
      <title>IstioCon 2021: How to Manage Any Layer-7 Traffic in an Istio Service Mesh?</title>
      <link>https://zhaohuabing.com/post/2021-03-02-manage-any-layer-7-traffic-in-istio/</link>
      <pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2021-03-02-manage-any-layer-7-traffic-in-istio/</guid>
      <description>备注：本文根据腾讯云赵化冰和知乎唐阳在 IstioCon 2021 中的演讲 “How to Manage Any Layer-7 Traffic in an Istio Service Mesh?” 整理而成。 大家好，今天我们想和大家分享的主题是如何扩</description>
    </item>
    
    <item>
      <title>CNBPS 2020：Istio 流量管理原理与协议扩展</title>
      <link>https://zhaohuabing.com/post/2020-12-07-cnbps2020-istio-traffic-management/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2020-12-07-cnbps2020-istio-traffic-management/</guid>
      <description>通过本次的分享，听众可以理解Istio流量管理背后的实现原理，包括控制面流量管理模型和数据面流量转发机制。本次分享还将介绍如何对Istio进</description>
    </item>
    
    <item>
      <title>CNBPS 2020：云原生应用架构专场介绍</title>
      <link>https://zhaohuabing.com/post/2020-11-12-cnbps2020/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2020-11-12-cnbps2020/</guid>
      <description>11月19-21日，CNBPS 2020重磅回归！ 作为一年一度的云原生科技盛会，众多云原生届的“顶流”将在这里聚集，展现云原生世界的科技想象力</description>
    </item>
    
    <item>
      <title>Service Mesher Meetup 成都站：Service Mesh是下一代SDN吗？</title>
      <link>https://zhaohuabing.com/post/2019-10-26-what-can-service-mesh-learn-from-sdn/</link>
      <pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2019-10-26-what-can-service-mesh-learn-from-sdn/</guid>
      <description>如果具有通信或者网络行业的知识背景，那么你对SDN(Software Defined Network)一定不会陌生。你也许已经注意到，近来在微服务领域兴起的</description>
    </item>
    
    <item>
      <title>ONAP Beijing Release Developer Forum: MSB to Support Carrier Grade ONAP Microservice Architecture with Service Mesh</title>
      <link>https://zhaohuabing.com/post/2017-11-11-onap-msb-to-support-carrier-grade-onap-microservice-architecture-with-service-mesh/</link>
      <pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2017-11-11-onap-msb-to-support-carrier-grade-onap-microservice-architecture-with-service-mesh/</guid>
      <description>Introduction In this session, I&amp;rsquo;ll talk about the MSB Plan for R2 and Beyond. I&amp;rsquo;ll also discuss the OMSA(ONAP Microservice Architecture): the vision of ONAP Microservice Architecture to support Carrier-Grade requirements of ONAP Microservices, which includes Service Orchestration, Service Discovery, Inter-service Communication, Service Governance and Service Monitoring and External API Gateway. ONAP Architecture Principle: ONAP modules should be designed as microservices: service-based with clear, concise function addressed by each service</description>
    </item>
    
    <item>
      <title>ONAP Developer Event: Microservice Bus Tutorial </title>
      <link>https://zhaohuabing.com/post/2017-09-25-onap-microservice-bus-tutorial-/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2017-09-25-onap-microservice-bus-tutorial-/</guid>
      <description>Introduction Microservices Bus(MSB) provide a reliable, resilient and scalable communication and governance infrastructure to support Microservice Architecture including including service registration/discovery, external API gateway, internal API gateway, client SDK. It&amp;rsquo;s a pluggable architecture so it can integrate with auth service provider to provide centralized Authentication &amp;amp; Authorization. MSB also provides a service portal to manage the REST APIs. MSB doesn’t depend on a specific</description>
    </item>
    
    <item>
      <title>ONS ONAP Minisummit: Microservice Powered Orchestration Architecture</title>
      <link>https://zhaohuabing.com/post/2017-04-14-onap-microservice-powered-orchestration-architecture/</link>
      <pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2017-04-14-onap-microservice-powered-orchestration-architecture/</guid>
      <description>Introduction In this session, I&amp;rsquo;ll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications. First, I will start with why we choose Microservice Architecture in OPEN-O. Then, I’d like to talk about the challenges we were facing when we turn to the microservice approach. Finally, How we address these challenges in OPEN-O with the help of Microservice BUS And</description>
    </item>
    
    <item>
      <title>ONAP Developer Event: MSB Technical Deep Dive and ONAP Use Cases</title>
      <link>https://zhaohuabing.com/post/2017-04-02-onap-msb-deep-dive/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/2017-04-02-onap-msb-deep-dive/</guid>
      <description>Introduction In this session, I&amp;rsquo;ll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications. First, I will start with why we choose Microservice Architecture in OPEN-O. Then, I’d like to talk about the challenges we were facing when we turn to the microservice approach. Finally, How we address these challenges in OPEN-O with the help of Microservice BUS And</description>
    </item>
    
  </channel>
</rss>